# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: Infraestructure
  - group: Comman variables for TF

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Friday'
              backendAzureRmResourceGroupName: '$(bergname)'
              backendAzureRmStorageAccountName: '$(besaname)'
              backendAzureRmContainerName: '$(becontainer)'
              backendAzureRmKey: '$(bekey)'
          - task: TerraformTaskV4@4
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'

  - stage: plan
    displayName: plan
    jobs:
    - job: plan
      steps:
      - task: TerraformInstaller@0
        displayName: tfinstall
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTaskV4@4
        displayName: init
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'Friday'
          backendAzureRmResourceGroupName: '$(bergname)'
          backendAzureRmStorageAccountName: '$(besaname)'
          backendAzureRmContainerName: '$(becontainer)'
          backendAzureRmKey: '$(bekey)'
      - task: TerraformTaskV4@4
        displayName: plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          environmentServiceNameAzureRM: 'Friday'

  - stage: approve
    displayName: approve
    jobs:
    - job: approve
      displayName: wait for approval
      pool: server
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 60
        inputs:
          notifyUsers: thomas.lantigua@solvex.com.do
          instructions: 'Approve plan for continue'

  - stage:
    displayName: apply
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Friday'
              backendAzureRmResourceGroupName: '$(bergname)'
              backendAzureRmStorageAccountName: '$(besaname)'
              backendAzureRmContainerName: '$(becontainer)'
              backendAzureRmKey: '$(bekey)'

          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'Friday'
